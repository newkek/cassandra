version: 2
jobs:
  j8_build:
    docker:
      - image: spod/cassandra-testing-ubuntu1810-java11-w-dependencies:20190306
    resource_class: medium
    working_directory: ~/
    shell: /bin/bash -eo pipefail -l
    parallelism: 1
    steps:
      - run:
          name: Log Environment Information
          command: |
            echo '*** id ***'
            id
            echo '*** cat /proc/cpuinfo ***'
            cat /proc/cpuinfo
            echo '*** free -m ***'
            free -m
            echo '*** df -m ***'
            df -m
            echo '*** ifconfig -a ***'
            ifconfig -a
            echo '*** uname -a ***'
            uname -a
            echo '*** mount ***'
            mount
            echo '*** env ***'
            env
            echo '*** java ***'
            which java
            java -version
      - run:
          name: Clone Cassandra Repository (via git)
          command: |
            git clone --single-branch --depth 1 --branch $CIRCLE_BRANCH git://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git ~/cassandra
      - run:
          name: Build Cassandra
          command: |
            export PATH=$JAVA_HOME/bin:$PATH
            cd ~/cassandra
            # Loop to prevent failure due to maven-ant-tasks not downloading a jar..
            for x in $(seq 1 3); do
                ${ANT_HOME}/bin/ant clean realclean jar
                RETURN="$?"
                if [ "${RETURN}" -eq "0" ]; then
                    break
                fi
            done
            # Exit, if we didn't build successfully
            if [ "${RETURN}" -ne "0" ]; then
                echo "Build failed with exit code: ${RETURN}"
                exit ${RETURN}
            fi
          no_output_timeout: 15m
      - run:
          name: Run eclipse-warnings
          command: |
            export PATH=$JAVA_HOME/bin:$PATH
            cd ~/cassandra
            ant eclipse-warnings
      - persist_to_workspace:
          root: /home/cassandra
          paths:
            - cassandra
            - .m2
    environment:
      - ANT_HOME: /usr/share/ant
      - LANG: en_US.UTF-8
      - KEEP_TEST_DIR: true
      - DEFAULT_DIR: /home/cassandra/cassandra-dtest
      - PYTHONIOENCODING: utf-8
      - PYTHONUNBUFFERED: true
      - CASS_DRIVER_NO_EXTENSIONS: true
      - CASS_DRIVER_NO_CYTHON: true
      - CASSANDRA_SKIP_SYNC: true
      - DTEST_REPO: git://github.com/apache/cassandra-dtest.git
      - DTEST_BRANCH: master
      - CCM_MAX_HEAP_SIZE: 1024M
      - CCM_HEAP_NEWSIZE: 256M
      - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      - JDK_HOME: /usr/lib/jvm/java-8-openjdk-amd64
  j8_unit_tests:
    docker:
      - image: spod/cassandra-testing-ubuntu1810-java11-w-dependencies:20190306
    resource_class: medium
    working_directory: ~/
    shell: /bin/bash -eo pipefail -l
    parallelism: 4
    steps:
      - attach_workspace:
          at: /home/cassandra
      - run:
          name: Determine unit Tests to Run
          command: |
            # reminder: this code (along with all the steps) is independently executed on every circle container
            # so the goal here is to get the circleci script to return the tests *this* container will run
            # which we do via the `circleci` cli tool.

            rm -fr ~/cassandra-dtest/upgrade_tests
            echo "***java tests***"

            # get all of our unit test filenames
            set -eo pipefail && circleci tests glob "$HOME/cassandra/test/unit/**/*.java" > /tmp/all_java_unit_tests.txt

            # split up the unit tests into groups based on the number of containers we have
            set -eo pipefail && circleci tests split --split-by=timings --timings-type=filename --index=${CIRCLE_NODE_INDEX} --total=${CIRCLE_NODE_TOTAL} /tmp/all_java_unit_tests.txt > /tmp/java_tests_${CIRCLE_NODE_INDEX}.txt
            set -eo pipefail && cat /tmp/java_tests_${CIRCLE_NODE_INDEX}.txt | sed "s;^/home/cassandra/cassandra/test/unit/;;g" | grep "Test\.java$"  > /tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt
            echo "** /tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt"
            cat /tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt
          no_output_timeout: 15m
      - run:
          name: Log Environment Information
          command: |
            echo '*** id ***'
            id
            echo '*** cat /proc/cpuinfo ***'
            cat /proc/cpuinfo
            echo '*** free -m ***'
            free -m
            echo '*** df -m ***'
            df -m
            echo '*** ifconfig -a ***'
            ifconfig -a
            echo '*** uname -a ***'
            uname -a
            echo '*** mount ***'
            mount
            echo '*** env ***'
            env
            echo '*** java ***'
            which java
            java -version
      - run:
          name: Run Unit Tests (testclasslist)
          command: |
            export PATH=$JAVA_HOME/bin:$PATH
            time mv ~/cassandra /tmp
            cd /tmp/cassandra
            if [ -d ~/dtest_jars ]; then
              cp ~/dtest_jars/dtest* /tmp/cassandra/build/
            fi
            ant testclasslist -Dtest.classlistfile=/tmp/java_tests_${CIRCLE_NODE_INDEX}_final.txt -Dtest.runners=2 -Dtest.classlistprefix=unit
          no_output_timeout: 15m
      - store_test_results:
          path: /tmp/cassandra/build/test/output/
      - store_artifacts:
          path: /tmp/cassandra/build/test/output
          destination: junitxml
      - store_artifacts:
          path: /tmp/cassandra/build/test/logs
          destination: logs
    environment:
      - ANT_HOME: /usr/share/ant
      - LANG: en_US.UTF-8
      - KEEP_TEST_DIR: true
      - DEFAULT_DIR: /home/cassandra/cassandra-dtest
      - PYTHONIOENCODING: utf-8
      - PYTHONUNBUFFERED: true
      - CASS_DRIVER_NO_EXTENSIONS: true
      - CASS_DRIVER_NO_CYTHON: true
      - CASSANDRA_SKIP_SYNC: true
      - DTEST_REPO: git://github.com/apache/cassandra-dtest.git
      - DTEST_BRANCH: master
      - CCM_MAX_HEAP_SIZE: 1024M
      - CCM_HEAP_NEWSIZE: 256M
      - JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      - JDK_HOME: /usr/lib/jvm/java-8-openjdk-amd64
workflows:
  version: 2
  java8_build_and_run_tests:
    jobs:
      - j8_build
      - j8_unit_tests:
          requires:
            - j8_build